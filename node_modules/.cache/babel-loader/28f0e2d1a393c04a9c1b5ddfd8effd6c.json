{"ast":null,"code":"var _jsxFileName = \"D:\\\\Josh\\\\fullstack-frontend-master\\\\src\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { registerUser } from '../api/apiRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [registrationSuccess, setRegistrationSuccess] = useState(false); // State to manage registration success banner\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const regUserData = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    }; // Call the registerUser function from the API to register the user\n\n    try {\n      await registerUser(regUserData);\n      setRegistrationSuccess(true); // Set registration success to true\n      // Reset form fields after successful registration\n\n      setFirstName('');\n      setLastName('');\n      setEmail('');\n      setPassword(''); // Hide registration success banner after 5 seconds\n\n      setTimeout(() => {\n        setRegistrationSuccess(false);\n      }, 5000);\n    } catch (error) {\n      console.error('Registration failed:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), registrationSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-banner\",\n      children: \"Registration successful! You will be redirected shortly.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"l3iAXHbAHuNXeoHHUeP2sLP1OZs=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerUser","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","registrationSuccess","setRegistrationSuccess","handleSubmit","e","preventDefault","regUserData","setTimeout","error","console"],"sources":["D:/Josh/fullstack-frontend-master/src/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { registerUser } from '../api/apiRequest';\r\n\r\nfunction Register() {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false); // State to manage registration success banner\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const regUserData = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password\r\n    };\r\n\r\n    // Call the registerUser function from the API to register the user\r\n    try {\r\n      await registerUser(regUserData);\r\n      setRegistrationSuccess(true); // Set registration success to true\r\n      // Reset form fields after successful registration\r\n      setFirstName('');\r\n      setLastName('');\r\n      setEmail('');\r\n      setPassword('');\r\n      // Hide registration success banner after 5 seconds\r\n      setTimeout(() => {\r\n        setRegistrationSuccess(false);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Your form inputs */}\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      {registrationSuccess && (\r\n        <div className=\"success-banner\">\r\n          Registration successful! You will be redirected shortly.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,mBAAD,EAAsBC,sBAAtB,IAAgDZ,QAAQ,CAAC,KAAD,CAA9D,CALkB,CAKqD;;EAEvE,MAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IAEA,MAAMC,WAAW,GAAG;MAClBb,SAAS,EAAEA,SADO;MAElBE,QAAQ,EAAEA,QAFQ;MAGlBE,KAAK,EAAEA,KAHW;MAIlBE,QAAQ,EAAEA;IAJQ,CAApB,CAHgC,CAUhC;;IACA,IAAI;MACF,MAAMR,YAAY,CAACe,WAAD,CAAlB;MACAJ,sBAAsB,CAAC,IAAD,CAAtB,CAFE,CAE4B;MAC9B;;MACAR,YAAY,CAAC,EAAD,CAAZ;MACAE,WAAW,CAAC,EAAD,CAAX;MACAE,QAAQ,CAAC,EAAD,CAAR;MACAE,WAAW,CAAC,EAAD,CAAX,CAPE,CAQF;;MACAO,UAAU,CAAC,MAAM;QACfL,sBAAsB,CAAC,KAAD,CAAtB;MACD,CAFS,EAEP,IAFO,CAAV;IAGD,CAZD,CAYE,OAAOM,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;IACD;EACF,CA1BD;;EA4BA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEL,YAAhB;MAAA,uBAEE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QAFF,EAMGF,mBAAmB,iBAClB;MAAK,SAAS,EAAC,gBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAjDQT,Q;;KAAAA,Q;AAmDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}