{"ast":null,"code":"var _jsxFileName = \"D:\\\\Josh\\\\fullstack-frontend-master\\\\src\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { loginUser } from '../api/apiRequest';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  // State to hold the input values\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Function to handle form submission\n\n  const handleSubmit = async e => {\n    // Mark the function as async\n    e.preventDefault(); // Here you can implement your login logic\n\n    console.log('Email:', email);\n    console.log('Password:', password); // Reset the form after submission\n\n    const loginRequest = {\n      \"email\": email,\n      \"password\": password\n    };\n\n    try {\n      await loginUser(loginRequest);\n      setEmail('');\n      setPassword('');\n      navigate('/home'); //window.location.href = '/home';\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","loginUser","useNavigate","LoginPage","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","console","log","loginRequest","error","target","value"],"sources":["D:/Josh/fullstack-frontend-master/src/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loginUser } from '../api/apiRequest';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  // State to hold the input values\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e) => { // Mark the function as async\r\n    e.preventDefault();\r\n    // Here you can implement your login logic\r\n    console.log('Email:', email);\r\n    console.log('Password:', password);\r\n    // Reset the form after submission\r\n    const loginRequest ={\r\n      \"email\":email,\r\n      \"password\":password\r\n    };\r\n\r\n    try {\r\n      await loginUser(loginRequest);\r\n      setEmail('');\r\n      setPassword('');\r\n      navigate('/home');\r\n\r\n      //window.location.href = '/home';\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"Email\" className=\"form-label\">Email:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B,CAJmB,CAKnB;;EACA,MAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;IAAE;IAClCA,CAAC,CAACC,cAAF,GADgC,CAEhC;;IACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,KAAtB;IACAQ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,QAAzB,EAJgC,CAKhC;;IACA,MAAMQ,YAAY,GAAE;MAClB,SAAQV,KADU;MAElB,YAAWE;IAFO,CAApB;;IAKA,IAAI;MACF,MAAML,SAAS,CAACa,YAAD,CAAf;MACAT,QAAQ,CAAC,EAAD,CAAR;MACAE,WAAW,CAAC,EAAD,CAAX;MACAC,QAAQ,CAAC,OAAD,CAAR,CAJE,CAMF;IACD,CAPD,CAOE,OAAOO,KAAP,EAAc;MACdH,OAAO,CAACG,KAAR,CAAc,eAAd,EAA+BA,KAA/B;IACD;EACF,CArBD;;EAuBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEN,YAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAuB,SAAS,EAAC,YAAjC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,OAHL;UAIE,KAAK,EAAEL,KAJT;UAKE,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAL3B;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAA0B,SAAS,EAAC,YAApC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAC,cAFZ;UAGE,EAAE,EAAC,UAHL;UAIE,KAAK,EAAEX,QAJT;UAKE,QAAQ,EAAGI,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAL9B;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAuBE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAvBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GA3DQd,S;UAIUD,W;;;KAJVC,S;AA6DT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}