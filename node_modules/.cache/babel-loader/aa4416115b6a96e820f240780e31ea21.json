{"ast":null,"code":"var _jsxFileName = \"D:\\\\Josh\\\\fullstack-frontend-master\\\\src\\\\auth\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { login } from '../api/apiRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(false); // Function to set user data\n\n  const loginUser = async userData => {\n    try {\n      await login(userData);\n      setUser(true);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  }; // Function to clear user data\n\n\n  const logoutUser = () => {\n    setUser(false);\n    sessionStorage.removeItem(\"regUserData\"); // Clear user data from session storage\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"e0c1bP1oqwE9ALxMyX11CFtqx68=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","login","UserContext","UserProvider","children","user","setUser","loginUser","userData","error","console","logoutUser","sessionStorage","removeItem"],"sources":["D:/Josh/fullstack-frontend-master/src/auth/UserContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { login } from '../api/apiRequest';\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(false);\r\n\r\n  // Function to set user data\r\n  const loginUser =async (userData) => {\r\n    try {\r\n        await login(userData);\r\n        setUser(true);\r\n      } catch (error) {\r\n        console.error(\"Login failed:\", error);\r\n      }\r\n  };\r\n\r\n  // Function to clear user data\r\n  const logoutUser = () => {\r\n    setUser(false);\r\n    sessionStorage.removeItem(\"regUserData\"); // Clear user data from session storage\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, loginUser, logoutUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC,CAD4C,CAG5C;;EACA,MAAMO,SAAS,GAAE,MAAOC,QAAP,IAAoB;IACnC,IAAI;MACA,MAAMP,KAAK,CAACO,QAAD,CAAX;MACAF,OAAO,CAAC,IAAD,CAAP;IACD,CAHH,CAGI,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,eAAd,EAA+BA,KAA/B;IACD;EACJ,CAPD,CAJ4C,CAa5C;;;EACA,MAAME,UAAU,GAAG,MAAM;IACvBL,OAAO,CAAC,KAAD,CAAP;IACAM,cAAc,CAACC,UAAf,CAA0B,aAA1B,EAFuB,CAEmB;EAC3C,CAHD;;EAKA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAER,IAAF;MAAQE,SAAR;MAAmBI;IAAnB,CAA7B;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}